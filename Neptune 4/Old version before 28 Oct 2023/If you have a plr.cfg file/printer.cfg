# This version of the printer.cfg of the Neptune 4 has been improved by SmartHome42/Printernbeer (Julien Mairy) 
# with valuable advice from Tom's Basement
# YouTube : https://www.youtube.com/@printernbeer
# Facebook page : https://www.facebook.com/Smarthome42
# Instagram : https://www.instagram.com/mairyjulien/
# TikTok : https://www.tiktok.com/@julienmairy 
# https://www.youtube.com/@tomsbasement 
# For a possible update check here: https://drive.google.com/drive/folders/1INA_ENxjiAfpFXLbg-fL4cn2lD2i2Hbl?usp=drive_link
# This date from Version 22 Oct 2023
# This file contains common pin mappings for MKS SKIPR
# boards. To use this config, the firmware should be compiled for the
# stm32f407. When running "make menuconfig", select the 48KiB
# bootloader, and enable "Serial for communication" and select the "on USART1 PA10/PA9"

# The "make flash" command does not work on the MKS SKIPR. Instead,
# after running "make", copy the generated "out/klipper.bin" file to a
# file named "mks_skipr.bin" on an SD card and then restart the
# MKS SKIPR with that SD card.

# See docs/Config_Reference.md for a description of parameters.
#####################################################################
# 	Base Config
#####################################################################

[include plr.cfg]
				  
[mcu]
# The hardware use USART1 PA10/PA9 connect to RK3328
serial: /dev/ttyS0
restart_method: command

[printer]
kinematics:cartesian
max_velocity: 500
max_accel: 5000
max_accel_to_decel: 4000
max_z_velocity: 15
max_z_accel: 300
square_corner_velocity: 5.0

[mcu rpi]
serial: /tmp/klipper_host_mcu

[virtual_sdcard]
path: ~/gcode_files


#####################################################################
#	Temperature
#####################################################################

[temperature_sensor mcu_temp]
sensor_type: temperature_mcu
min_temp: 0
max_temp: 100

[temperature_sensor Host]
sensor_type: temperature_host
min_temp: 10
max_temp: 100

#####################################################################
#	X/Y/Z Stepper Settings
#####################################################################
[stepper_x]
step_pin:PC14
dir_pin:PC13
enable_pin:!PC15
microsteps: 64
rotation_distance: 40
full_steps_per_rotation:200  #set to 400 for 0.9 degree stepper
endstop_pin:PC0
position_min: -4  
position_endstop:-4
position_max: 235
homing_speed:50
homing_retract_dist:5
homing_positive_dir:false
step_pulse_duration:0.000002

[stepper_y]
step_pin:PB4
dir_pin:PB3
enable_pin:!PB5
microsteps: 64
rotation_distance: 40
full_steps_per_rotation:200  #set to 400 for 0.9 degree stepper
endstop_pin:PB8
position_min: 0
position_endstop:0 
position_max:235
homing_speed:50
homing_retract_dist:5
homing_positive_dir:false
step_pulse_duration:0.000002


[stepper_z]
step_pin:PC10
dir_pin:!PA15
enable_pin: !PC11
microsteps: 64
rotation_distance: 8
full_steps_per_rotation: 200
endstop_pin:probe:z_virtual_endstop ## PB12 for Z-max; endstop have'!' is NO

##  Z-position of nozzle (in mm) to z-endstop trigger point relative to print surface (Z0)
##  (+) value = endstop above Z0, (-) value = endstop below
##	Increasing position_endstop brings nozzle closer to the bed
##  After you run Z_ENDSTOP_CALIBRATE, position_endstop will be stored at the very end of your config
#position_endstop:-5
position_max: 268
position_min: -5 
homing_speed: 8
second_homing_speed: 3

########################################
# TMC UART configuration
########################################

[tmc2209 stepper_x]
uart_pin: PB9
run_current: 0.55
#hold_current: 0.4
interpolate: false
stealthchop_threshold: 999999

[tmc2209 stepper_y]
uart_pin: PD2
run_current: 0.55
#hold_current: 0.4
interpolate: false
stealthchop_threshold: 999999

[tmc2209 stepper_z]
uart_pin: PC5
run_current: 0.8
#hold_current: 0.5
interpolate: false
stealthchop_threshold: 120

[tmc2209 extruder]
uart_pin: PC4
run_current: 0.9
#hold_current: 0.5
interpolate: false
stealthchop_threshold: 400


#####################################################################
# 	Extruder
#####################################################################

[extruder]
step_pin:PA5
dir_pin:!PA6
enable_pin:!PA4
microsteps:64
rotation_distance: 28.888 #31.4	#Bondtech 5mm Drive Gears
gear_ratio: 52:10
full_steps_per_rotation: 200	#200 for 1.8 degree, 400 for 0.9 degree
nozzle_diameter: 0.400
filament_diameter: 1.750
min_temp: 0
max_temp: 330
heater_pin: PA7
sensor_type:NTC 100K MGB18-104F39050L32
sensor_pin: PA1
max_power: 1
control :pid
pid_kp : 26.213 
pid_ki : 1.304
pid_kd : 131.721 
pressure_advance: 0.012 #0.022
pressure_advance_smooth_time: 0.02
#max_extrude_cross_section:500
instantaneous_corner_velocity: 10.000
max_extrude_only_distance: 100.0
max_extrude_only_velocity:5000
max_extrude_only_accel:2000
step_pulse_duration:0.000002
max_extrude_cross_section: 50  

[firmware_retraction]
retract_length: 0.5
retract_speed: 55
unretract_extra_length: 0.05
unretract_speed: 60

[verify_heater extruder]
max_error: 120
check_gain_time:120
hysteresis: 10
heating_gain: 2


#####################################################################
# 	Bed Heater
#####################################################################
[heater_bed]
heater_pin:PB10
sensor_type: NTC 100K MGB18-104F39050L32
sensor_pin: PA0
max_power: 1.0
#control = watermark
control: pid
pid_kp = 64.367
pid_ki = 0.804
pid_kd = 1288.956
min_temp: 0
max_temp: 120 #200


[verify_heater heater_bed]
max_error: 120
check_gain_time:120
hysteresis: 10
heating_gain: 2

#####################################################################
# 	Fan Control
#####################################################################
#fan for printed model FAN0
[fan]
pin: PC9

#fan for hotend FAN1
[heater_fan fan1]
pin: PA8
shutdown_speed: 1

#####################################################################
# Acceleration sensor
#####################################################################

[input_shaper]
shaper_freq_x: 66.66    #68.4
shaper_freq_y: 42.05    #45.6
shaper_type_x: mzv
shaper_type_y: ei


[adxl345]
cs_pin: rpi:None
spi_bus: spidev0.2

[resonance_tester]
accel_chip: adxl345
probe_points:
    100, 100, 20  # an example


####################################################################
#	Homing and Gantry Adjustment Routines
#####################################################################
[idle_timeout]
timeout: 36000

[safe_z_home]
home_xy_position: 141,98 # Change coordinates to the center of your print bed
speed: 100
z_hop: 10                 # Move up 10mm
z_hop_speed: 5

[gcode_macro G29]
gcode:
      BED_MESH_CLEAR
      G28
      BED_MESH_CALIBRATE
      G0 X117 Y126 Z5 F3000
      G0 Z0 F300

[screws_tilt_adjust]
screw1: 56.75, 12.05
screw1_name: front left screw
screw2: 226.75, 12.05
screw2_name: front right screw
screw3: 226.75, 182.05
screw3_name: rear right screw
screw4: 56.75, 182.05
screw4_name: rear left screw
horizontal_move_z: 10.0
speed: 150.0
screw_thread: CW-M4

[bed_screws]
screw1: 32.5, 32.5
screw1_name: front left screw
screw2: 202.5, 32.5
screw2_name: front right screw
screw3: 202.5, 202.5
screw3_name: rear right screw
screw4: 32.5, 202.5
screw4_name: rear left screw
horizontal_move_z: 10.0
speed: 150.0

#####################################################################
# 	Probe
#####################################################################

[probe]
pin:^PA11
x_offset: -24.25
y_offset: 20.45
z_offset: -1.925
speed: 10.0
samples: 2
samples_result: median
sample_retract_dist: 3.0
samples_tolerance: 0.1
samples_tolerance_retries: 1

[bed_mesh]
speed:120                #调平速度
horizontal_move_z:10     #调平中Z抬高高度
mesh_min:10,21           #探测点最小位置
mesh_max:210,211         #探测点最大位置
probe_count:11,11          #调平点数
algorithm:bicubic
bicubic_tension:0.2
mesh_pps: 4, 4   
fade_start:1.0
fade_end:10.0 


#####################################################################
# LED Control
#####################################################################
[output_pin caselight]
pin: PB7
pwm: false
shutdown_value:0
value:0.0

[output_pin caselight1]
pin: PC7
pwm: false
shutdown_value:0
value:0.0

[gcode_macro FLASHLIGHT_ON]
description: Turn on Hotend LEDs
gcode:
  SET_PIN PIN=caselight VALUE=1


[gcode_macro FLASHLIGHT_OFF]
description: Turn off Hotend LEDs
gcode:
  SET_PIN PIN=caselight VALUE=0


[gcode_macro MODLELIGHT_ON]
description: Turn on Logo LEDs
gcode:
  SET_PIN PIN=caselight1 VALUE=1


[gcode_macro MODLELIGHT_OFF]
description: Turn off Logo LEDs
gcode:
  SET_PIN PIN=caselight1 VALUE=0
#####################################################################
# Filament sensor
#####################################################################

[filament_switch_sensor fila]
pause_on_runout: True
runout_gcode:
            PAUSE
            SET_FILAMENT_SENSOR SENSOR=fila ENABLE=1
event_delay: 3.0
pause_delay: 0.5
switch_pin: PA12[filament_switch_sensor fila]
pause_on_runout: True
runout_gcode:
            PAUSE
            SET_FILAMENT_SENSOR SENSOR=fila ENABLE=1
event_delay: 3.0
pause_delay: 0.5
switch_pin: PA12

#####################################################################
# 	Macros
#####################################################################

[gcode_macro PRINT_START]         
gcode:
    SAVE_VARIABLE VARIABLE=was_interrupted VALUE=True
	  G92 E0
    BED_MESH_CLEAR                                           
	  G90             
    BED_MESH_PROFILE LOAD=default   
    CLEAR_PAUSE
    M117 Printing                   
    
[gcode_macro PRINT_END]
gcode:
    SAVE_VARIABLE VARIABLE=was_interrupted VALUE=False
    RUN_SHELL_COMMAND CMD=clear_plr
    clear_last_file


[pause_resume]

[gcode_macro CANCEL_PRINT]
rename_existing: BASE_CANCEL_PRINT
gcode:
    PRINT_END
    SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout} 
    SDCARD_RESET_FILE
    M400 							            ; wait for buffer to clear
    G92 E0 							          ; zero the extruder
    G1 E-10.0 F1200 				      ; retract filament
    G91 							            ; relative positioning
    TURN_OFF_HEATERS
    M107 							            ; turn off fan
    G1 Z2 F3000 					        ; move nozzle up 2mm
    G90 							            ; absolute positioning
    G0 X0 Y225 F3600 				      ; park nozzle at rear
    M84


[gcode_macro PAUSE]
rename_existing: BASE_PAUSE
gcode:
    # Parameters
    {% set z = params.Z|default(10)|int %}                                                   ; z hop amount
    {% set e = params.E|default(1) %}
    
    {% if printer['pause_resume'].is_paused|int == 0 %}     
        SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=zhop VALUE={z}                              ; set z hop variable for reference in resume macro
        SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=etemp VALUE={printer['extruder'].target}    ; set hotend temp variable for reference in resume macro
                                
#       SET_FILAMENT_SENSOR SENSOR=fila ENABLE=0                                             ; disable filament sensor       
        SAVE_GCODE_STATE NAME=PAUSE                                                          ; save current print position for resume                
        BASE_PAUSE                                                                           ; pause print
        {% if (printer.gcode_move.position.z + z) < printer.toolhead.axis_maximum.z %}       ; check that zhop doesn't exceed z max
            G91                                                                              ; relative positioning
            G1 Z{z} F900                                                                     ; raise Z up by z hop amount
        {% else %}
#            { action_respond_info("Pause zhop exceeds maximum Z height.") }                  ; if z max is exceeded, show message and set zhop value for resume to 0
            SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=zhop VALUE=0
        {% endif %}
        G1 E-{e} F2100
        SAVE_GCODE_STATE NAME=PAUSEPARK
        G90                                                                                  ; absolute positioning
        G1 X-4 Y0 F6000   ; park toolhead at front center
        #M104 S0                                                                              ; turn off hotend
        SET_IDLE_TIMEOUT TIMEOUT=43200                                                       ; set timeout to 12 hours
    {% endif %}

[gcode_macro RESUME]
rename_existing: BASE_RESUME
variable_zhop: 0
variable_etemp: 0
gcode:
    # Parameters
    {% set e = params.E|default(2.5)|int %}                                          ; hotend prime amount (in mm)
    
    {% if printer['pause_resume'].is_paused|int == 1 %}
        #SET_FILAMENT_SENSOR SENSOR=fila ENABLE=1                                    ; enable filament sensor
        #INITIAL_RGB                                                                 ; reset LCD color
        SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout}  ; set timeout back to configured value
        {% if etemp > 0 %}
            M109 S{etemp|int}                                                        ; wait for hotend to heat back up
        {% endif %}
        RESTORE_GCODE_STATE NAME=PAUSEPARK MOVE=1 MOVE_SPEED=100                     ; go back to parked position in case toolhead was moved during pause (otherwise the return zhop can error)  
        G91                                                                          ; relative extruder positioning              
        M83                                                                          ; restore position                                                                                  
        {% if printer[printer.toolhead.extruder].temperature >= printer.configfile.settings.extruder.min_extrude_temp %}                                                
            G1 Z{zhop * -1} E{e} F900                                                ; prime nozzle by E, lower Z back down
        {% else %}                      
            G1 Z{zhop * -1} F900                                                     ; lower Z back down without priming (just in case we are testing the macro with cold hotend)
        {% endif %}
        M400
        RESTORE_GCODE_STATE NAME=PAUSE MOVE=1 MOVE_SPEED=60 
        BASE_RESUME                                                                  ; resume print
    {% endif %}
 
[gcode_macro M600]
gcode:
  {% set default_x = printer.toolhead.axis_minimum.x + 20 %}
  {% set default_y = printer.toolhead.axis_minimum.y + 20 %}
  {% set default_e = 100 %}

  {% if 'save_variables' in printer %}
    {% set svv = printer.save_variables.variables %}
    {% if 'park_x' in svv %}
      {% set default_x = svv.park_x %}
    {% endif %}
    {% if 'park_y' in svv %}
      {% set default_y = svv.park_y %}
    {% endif %}
    {% if 'bowden_len' in svv %}
      {% set default_e = svv.bowden_len %}
    {% endif %}
  {% endif %}

  {% set x = params.X|default(default_x)|float %}
  {% set y = params.Y|default(default_y)|float %}
  {% set z = params.Z|default(20)|float %}
  {% set e = params.E|default(default_e)|float %}

  {% if printer.pause_resume.is_paused %}
    {action_respond_info("Already paused")}
  {% elif printer.toolhead.homed_axes != "xyz" %}
    {action_respond_info("Please home XYZ first")}
  {% else %}
    PAUSE X={x} Y={y} Z={z}
    M702 U{e}
  {% endif %}

[gcode_macro M702]
gcode:
  {% set default_u = 100 %}

  {% if 'save_variables' in printer %}
    {% set svv = printer.save_variables.variables %}
    {% if 'bowden_len' in svv %}
      {% set default_u = svv.bowden_len %}
    {% endif %}
  {% endif %}

  {% set p = params.P|default(8)|float %}
  {% set p_f = params.PF|default(180)|float %}
  {% set i = params.I|default(30)|float %}
  {% set i_f = params.IF|default(180)|float %}
  {% set u = params.U|default(default_u)|float %}
  {% set u_f = params.UF|default(360)|float %}

  {% if printer.idle_timeout.state == "Printing" and not printer.pause_resume.is_paused %}
    {action_respond_info("This command cannot be used while printing")}
  {% elif printer.extruder.temperature < 170 %}
    {action_respond_info("Extruder temperature too low")}
  {% else %}
    SAVE_GCODE_STATE NAME=M702_state
    M83
    {% if p > 0.0 %}
      G1 E{p} F{p_f}
    {% endif %}
    {% if i > 0.0 %}
      G1 E-{i} F{i_f}
    {% endif %}
    {% if u > 0.0 %}
      G1 E-{u} F{u_f}
    {% endif %}
    RESTORE_GCODE_STATE NAME=M702_state MOVE=0
  {% endif %}
  
[gcode_macro UNLOAD_FILAMENT] #unload filament
gcode:
    G91
#    G1 E10 F300
    G1 E-80 F800
    G90

[gcode_macro LOAD_FILAMENT] #load filament
gcode:
    G91
    G1 E20 F800
    G1 E60 F300
    G90

[gcode_macro M109]
rename_existing: M99109
gcode:
    #Parameters
    {% set s = params.S|float %}
    M104 {% for p in params %}{'%s%s' % (p, params[p])}{% endfor %}  ; Set hotend temp
    {% if s != 0 %}
        TEMPERATURE_WAIT SENSOR=extruder MINIMUM={s} MAXIMUM={s+1}   ; Wait for hotend temp (within 1 degree)
    {% endif %}

[gcode_macro PID_EXTRUDER]

gcode:
  PID_CALIBRATE HEATER=extruder TARGET=210
  SAVE_CONFIG

[gcode_macro PID_BED]
gcode:
  PID_CALIBRATE HEATER=heater_bed TARGET=60
  SAVE_CONFIG
   
#####################################################################
# 	Other
#####################################################################

[display_status]

[gcode_macro M84]
rename_existing:M84.1
gcode:
      SET_STEPPER_ENABLE STEPPER=stepper_x enable=0
      SET_STEPPER_ENABLE STEPPER=stepper_y enable=0
      SET_STEPPER_ENABLE STEPPER=stepper_z enable=0
      SET_STEPPER_ENABLE STEPPER=extruder  enable=0
      SET_KINEMATIC_POSITION

[gcode_arcs]
resolution: 0.1

[exclude_object]




